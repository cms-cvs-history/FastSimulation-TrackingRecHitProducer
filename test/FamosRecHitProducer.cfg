process FamosRecHitProducer  = 
{
    untracked      PSet maxEvents = {untracked int32 input = 10000}

    service =  RandomNumberGeneratorService {
	untracked uint32 sourceSeed = 831975
	PSet moduleSeeds =
	{
	    #                    untracked uint32 VtxSmeared = 123456789
	    untracked uint32 Famos = 13579
	    untracked uint32 siTrackerGaussianSmearingRecHits = 24680
	}
    }
    
    source = FlatRandomEGunSource 
    {	 
	untracked uint32 firstRun  = 1
	untracked      PSet  PGunParameters =
	{
	    # you can request more than 1 particle
	    #untracked vint32  PartID = { 211, 11, -13 }
	    untracked vint32 PartID = {13} 
	    untracked double MinEta = -2.5
	    untracked double MaxEta = 2.5
	    untracked double MinPhi = -3.14159265358979323846  # it must be in radians
	    untracked double MaxPhi =  3.14159265358979323846
	    untracked double MinE   = 1.
	    untracked double MaxE   = 10.
	}      
	untracked int32 Verbosity = 0 # for printouts, set it to 1 (or greater)   
    }
    
    ### The particle data table ###
    include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
    
    ### Magnetic Field ###
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
    
    ### Geometry ###
    include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
    
    ### Tracker Numbering ###
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
    
    ### Tracker geometry ###
    include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
    include "RecoTracker/GeometryESProducer/data/TrackerRecoGeometryESProducer.cfi"
    
    ### Calo geometry service model ###
    include "Geometry/CaloEventSetup/data/CaloGeometry.cff"	
    
    # Primary vertex smearing.
    #  include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"
    
    ### Famos ###
    module Famos = FamosProducer 
    { 
	untracked int32 RunNumber = 1001
	bool            UseMagneticField    = true
	bool            SimulatePileUp      = false
	bool            SimulateTracking    = true
	bool            SimulateCalorimetry = false
	untracked int32 Verbosity           = 3
	
	# Gaussian or flat or no primary vertex smearing
	include "FastSimulation/Event/data/GaussianVertexGenerator.cfi"
	#	include "FastSimulation/Event/data/FlatVertexGenerator.cfi"
	#	include "FastSimulation/Event/data/NoVertexGenerator.cfi"
	
	# Kinematic cuts for the particle filter in the SimEvent
	include "FastSimulation/Event/data/ParticleFilter.cfi"
	
	# Material effects to be simulated in the tracker material and associated cuts
	include "FastSimulation/MaterialEffects/data/MaterialEffects.cfi"
	
	# (De)activate decays of unstable particles (K0S, etc...)
	include "FastSimulation/TrajectoryManager/data/ActivateDecays.cfi"
	
	# Conditions to save Tracker SimHits 
	include "FastSimulation/TrajectoryManager/data/TrackerSimHits.cfi"
	
	# FastCalorimetry
	include "FastSimulation/Calorimetry/data/Calorimetry.cfi"
	
	# PileUp Event Generation
	#	include "FastSimulation/PileUpProducer/data/PUProducer.cfi"
	
    }
        
    include "FastSimulation/TrackingRecHitProducer/data/TrackingRecHitTranslator.cfi"

    ### Gaussian Smearing RecHit producer ###
    include "FastSimulation/TrackingRecHitProducer/data/SiTrackerGaussianSmearingRecHitConverter.cfi"
    replace siTrackerGaussianSmearingRecHits.ROUList                 = {"TrackerHits"}
    replace siTrackerGaussianSmearingRecHits.trackingPSimHits        = false
    ### Gaussian Smearing RecHit Producer DEBUG ###
    #    service = MessageLogger {
    #	untracked vstring destinations      = { "FamosRecHits.log" }
    #	untracked PSet    FamosRecHits.log  = { untracked string threshold = "DEBUG" }
    #	untracked vstring debugModules      = { "siTrackerGaussianSmearingRecHits" }
    #    }
    
    #    service = Timing { }
    #    service = SimpleProfiling { }
    
    # Mixing module 
    module mix = MixingModule   {
	int32 bunchspace = 25
    }   

    module FamosRecHitAnalysis = FamosRecHitAnalysis{ 
        string   RootFileName  = "FamosRecHitAnalysis.root"
        vstring  SimHitList    = {"TrackerHits"}
        InputTag RecHits       = trackerGSRecHitTranslator
    }
    
    # Production, translation and analysis
    #path Path = { Famos, mix, siTrackerGaussianSmearingRecHits, trackerGSRecHitTranslator, FamosRecHitAnalysis }
    # Production and translation
    path Path = { Famos, mix, siTrackerGaussianSmearingRecHits, trackerGSRecHitTranslator }
    # Production only
    #path Path = { Famos, mix, siTrackerGaussianSmearingRecHits }

    module  Output = PoolOutputModule { 
	untracked string fileName = "rechits.root" 
    	untracked vstring outputCommands = 
	{
	    "keep *"
	}
    }
    endpath outpath = { Output }
    
}
